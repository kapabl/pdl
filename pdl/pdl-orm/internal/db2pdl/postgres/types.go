package postgres

var postgresTypeDictionary = map[string]map[string]string{
	"Go": {
		"boolean":                     "bool",
		"bool":                        "bool",
		"smallint":                    "int",
		"integer":                     "int",
		"int":                         "int",
		"bigint":                      "int64",
		"serial":                      "int",
		"bigserial":                   "int64",
		"numeric":                     "float64",
		"decimal":                     "float64",
		"real":                        "float64",
		"double precision":            "float64",
		"money":                       "float64",
		"character varying":           "string",
		"varchar":                     "string",
		"character":                   "string",
		"char":                        "string",
		"text":                        "string",
		"citext":                      "string",
		"uuid":                        "string",
		"json":                        "string",
		"jsonb":                       "string",
		"date":                        "time.Time",
		"timestamp":                   "time.Time",
		"timestamp without time zone": "time.Time",
		"timestamp with time zone":    "time.Time",
		"time":                        "string",
		"time without time zone":      "string",
		"time with time zone":         "string",
		"interval":                    "string",
		"bytea":                       "[]byte",
		"inet":                        "string",
		"vector":                      "[]float64",
	},
	"Pdl": {
		"boolean":                     "bool",
		"bool":                        "bool",
		"smallint":                    "int",
		"integer":                     "int",
		"int":                         "int",
		"bigint":                      "int",
		"serial":                      "int",
		"bigserial":                   "int",
		"numeric":                     "double",
		"decimal":                     "double",
		"real":                        "double",
		"double precision":            "double",
		"money":                       "double",
		"character varying":           "string",
		"varchar":                     "string",
		"character":                   "string",
		"char":                        "string",
		"text":                        "string",
		"citext":                      "string",
		"uuid":                        "string",
		"json":                        "string",
		"jsonb":                       "string",
		"date":                        "string",
		"timestamp":                   "string",
		"timestamp without time zone": "string",
		"timestamp with time zone":    "string",
		"time":                        "string",
		"time without time zone":      "string",
		"time with time zone":         "string",
		"interval":                    "string",
		"bytea":                       "string",
		"inet":                        "string",
		"vector":                      "string",
	},
	"TypeScript": {
		"boolean":                     "boolean",
		"bool":                        "boolean",
		"smallint":                    "number",
		"integer":                     "number",
		"int":                         "number",
		"bigint":                      "number",
		"serial":                      "number",
		"bigserial":                   "number",
		"numeric":                     "number",
		"decimal":                     "number",
		"real":                        "number",
		"double precision":            "number",
		"money":                       "number",
		"character varying":           "string",
		"varchar":                     "string",
		"character":                   "string",
		"char":                        "string",
		"text":                        "string",
		"citext":                      "string",
		"uuid":                        "string",
		"json":                        "string",
		"jsonb":                       "string",
		"date":                        "string",
		"timestamp":                   "string",
		"timestamp without time zone": "string",
		"timestamp with time zone":    "string",
		"time":                        "string",
		"time without time zone":      "string",
		"time with time zone":         "string",
		"interval":                    "string",
		"bytea":                       "string",
		"inet":                        "string",
		"vector":                      "string",
	},
	"Php": {
		"boolean":                     "bool",
		"bool":                        "bool",
		"smallint":                    "int",
		"integer":                     "int",
		"int":                         "int",
		"bigint":                      "int",
		"serial":                      "int",
		"bigserial":                   "int",
		"numeric":                     "float",
		"decimal":                     "float",
		"real":                        "float",
		"double precision":            "float",
		"money":                       "float",
		"character varying":           "string",
		"varchar":                     "string",
		"character":                   "string",
		"char":                        "string",
		"text":                        "string",
		"citext":                      "string",
		"uuid":                        "string",
		"json":                        "string",
		"jsonb":                       "string",
		"date":                        "string",
		"timestamp":                   "string",
		"timestamp without time zone": "string",
		"timestamp with time zone":    "string",
		"time":                        "string",
		"time without time zone":      "string",
		"time with time zone":         "string",
		"interval":                    "string",
		"bytea":                       "string",
		"inet":                        "string",
		"vector":                      "string",
	},
}

func sqlTypeToLanguage(language string, cleanType string) string {
	languageMap, languageFound := postgresTypeDictionary[language]
	if !languageFound {
		return "string"
	}
	typeValue, typeFound := languageMap[cleanType]
	if !typeFound {
		return "string"
	}
	return typeValue
}
